{
  "contractName": "ERC721Full",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology.  * See https://eips.ethereum.org/EIPS/eip-721\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.     * _Available since v2.5.0._\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.      * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.      * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"Full ERC721 Token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Full.sol\":\"ERC721Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Address.sol\":{\"keccak256\":\"0xfaeea3605991a8f569b82232156abfad4135c3bf9ca72c010c04cf19f59fd464\",\"urls\":[\"bzz-raw://44ad68a7cb8bcaede9b830fe4555b09e5a269c560aa4be7702ab175c50acc5a7\",\"dweb:/ipfs/QmSUPEDsYp2Rst8gu9ZjFvLFZYzXPksdaRPut5v7KmGL8R\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Context.sol\":{\"keccak256\":\"0xfb796dee5670671e060ed6c1392d3dda7d0bf97ad530d83ea5efc398f45e34dc\",\"urls\":[\"bzz-raw://0a91d0d3f0af61ec37cfea874545104f6994fbe7188192ecb1dfb34c7adcf059\",\"dweb:/ipfs/Qmba9dY1U67NRz1sRBWebYYkhFbcbV78PPs9TGgZUkqfnY\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Counters.sol\":{\"keccak256\":\"0xbfc6050b812862c08ddf99624451c05c8be668c656d7cbc0ecb70f88900d20e4\",\"urls\":[\"bzz-raw://09717a428e8b7054b98562ffefa9445b4c6c271834405c77e9e4caa653179cc6\",\"dweb:/ipfs/QmbmYZV3q2PAk2S9L7iPD4pohR5Jn4DFbeGgj4q5NwL1Aq\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC165.sol\":{\"keccak256\":\"0xe22f5a85b261d1def438a058550bd597faaae31007fda71fbb297748f00ec49f\",\"urls\":[\"bzz-raw://66ff8b519ba442b435fbcd3a9b23a53d8887fc5712a30683bcafd6b74fb71ac4\",\"dweb:/ipfs/QmQXCd9GBssDJBAXHvHsxC86BRitXMcBmA53USJMKN8HTG\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721.sol\":{\"keccak256\":\"0x66a7b2d629fba326808a13a86bcb08ace472a1128e27303f8bc82c7c865a9521\",\"urls\":[\"bzz-raw://5dbd27df3a14c25af99b447076a8dadcce8b195166e9cd0213cf6549488c8c01\",\"dweb:/ipfs/QmYmV2LJC6QRDfPdTNVYrS5FvaDHe1MEqnGraKbQ4oJbgb\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Enumerable.sol\":{\"keccak256\":\"0x07d928410d63a0a428207b77befbdc66163569e78208a7e7e4df8d0a4f3afaaf\",\"urls\":[\"bzz-raw://0f831e0057e2fc5795030a8174e040a70f54abfb0a391273a56bc18a9945853a\",\"dweb:/ipfs/Qmcxd5D6AfB6QaYz4AssQjttbFpZaEoxX289jFCVgseinh\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Full.sol\":{\"keccak256\":\"0x68293510ddd42da1d6c49abd93226b9bd3cf1f3d4b55dc0c9130a4c0156f73f4\",\"urls\":[\"bzz-raw://0ffe763bb504bfa6fe13a6e3cb380ffe2d98ad2cebb17ff8d634f63fe456151b\",\"dweb:/ipfs/QmVr1RRbVGYryongGd5STjCCqAgV9jxW3LtdxFae6hCLee\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Metadata.sol\":{\"keccak256\":\"0xac8573a5928a19f7eb6992ca95967cf6eeeed59a164c66e485d145f93151a8e3\",\"urls\":[\"bzz-raw://8aff48ba89dece3cd5e3b5618124c47cfccf6f58eabed8ae5c210feb04cd7d5c\",\"dweb:/ipfs/QmQkXbPNwmhjF5YnZFfpMzVaMY4oUB2139YyYfEqRw1mrA\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/IERC165.sol\":{\"keccak256\":\"0x341783c84450594ca1d3bd0025ff752b6581bf72002c0de3961e2b6a860d2a30\",\"urls\":[\"bzz-raw://fd49dfb635406db1dc28855a42ee757ef4ae5a5d45a3fbde6aeb91f3a9c93b1d\",\"dweb:/ipfs/QmbS7AzZMRQ43nNJ5xW1LP28A8cm2daDEr18BcdZgaZASr\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/IERC721.sol\":{\"keccak256\":\"0x5df67bcd2ece6cd049f4f7c6f1b78db0123ec0956f4d0bcaff38bc18d2f91329\",\"urls\":[\"bzz-raw://2abf0fd49227b98f4fe23dce8ba06e857b15258e65e7d16a742c19ece232df40\",\"dweb:/ipfs/QmYr5p7JDP7gkvfAmMCQCvgqVbPBqxBRcNRssc3Z6cNSkB\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/IERC721Enumerable.sol\":{\"keccak256\":\"0x3c161ae52b5cf88f77ea4f164cf9ef0962d19394176632280661dcc8caef7b40\",\"urls\":[\"bzz-raw://765310e26f7fea551e123c97a7644c848e5f1a6b01c94badb1d406e58bc1ac5d\",\"dweb:/ipfs/QmcMW6NJAKuGrRajZPog9uwd7rvJC6gLWJwL7CrCuKXH5H\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/IERC721Metadata.sol\":{\"keccak256\":\"0x3727e82c5e62152dfb50e640c4b35bfdea997fdfa6034aebefd7194b897e3098\",\"urls\":[\"bzz-raw://a60345b2dae36dffa91ae55107e7af8c8f15001edb663eb564b20e0e43e718a0\",\"dweb:/ipfs/QmNegK4uMeaVimkxKqiq8gy6aq6YtHUzA7KoJ5ir4TkxJU\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x272967aea5c83799b8160f7d2e9abd9ebc27c60f22a183e71d12859f9c14b0a4\",\"urls\":[\"bzz-raw://8d8ece089b670e25758b05347c4414b91092dd8c6325fb246776ba86a444659c\",\"dweb:/ipfs/QmXMBXNzRPke2Qa32AE5CXsHJbtt6iJZRbZbnDvcDRABik\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/SafeMath.sol\":{\"keccak256\":\"0xd2483163645530baa8569a2249aee0f6877f617126c377db05991691e1c478dd\",\"urls\":[\"bzz-raw://26c5ec0b4490d9303fec67dfc332e9eb5d8c2f31cd1c0319ad8e1304bb247044\",\"dweb:/ipfs/QmbAARLa4CSbXLRyfUdE1XYCrW3zHga5iNhPbbF8zXSmno\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002ad638038062002ad6833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508181620001cf6301ffc9a760e01b6200025360201b60201c565b620001e76380ac58cd60e01b6200025360201b60201c565b620001ff63780e9d6360e01b6200025360201b60201c565b8160099080519060200190620002179291906200035c565b5080600a9080519060200190620002309291906200035c565b5062000249635b5e139f60e01b6200025360201b60201c565b505050506200040b565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200039f57805160ff1916838001178555620003d0565b82800160010185558215620003d0579182015b82811115620003cf578251825591602001919060010190620003b2565b5b509050620003df9190620003e3565b5090565b6200040891905b8082111562000404576000816000905550600101620003ea565b5090565b90565b6126bb806200041b6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a257806395d89b411161007157806395d89b411461059b578063a22cb4651461061e578063b88d4fde1461066e578063c87b56dd14610773578063e985e9c51461081a5761010b565b80634f6ccce7146104105780636352211e146104525780636c0360eb146104c057806370a08231146105435761010b565b806318160ddd116100de57806318160ddd146102b457806323b872dd146102d25780632f745c591461034057806342842e0e146103a25761010b565b806301ffc9a71461011057806306fdde0314610175578063081812fc146101f8578063095ea7b314610266575b600080fd5b61015b6004803603602081101561012657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610896565b604051808215151515815260200191505060405180910390f35b61017d6108fd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101bd5780820151818401526020810190506101a2565b50505050905090810190601f1680156101ea5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102246004803603602081101561020e57600080fd5b810190808035906020019092919050505061099f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b26004803603604081101561027c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a3a565b005b6102bc610b7e565b6040518082815260200191505060405180910390f35b61033e600480360360608110156102e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b8b565b005b61038c6004803603604081101561035657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c01565b6040518082815260200191505060405180910390f35b61040e600480360360608110156103b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cc0565b005b61043c6004803603602081101561042657600080fd5b8101908080359060200190929190505050610ce0565b6040518082815260200191505060405180910390f35b61047e6004803603602081101561046857600080fd5b8101908080359060200190929190505050610d60565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c8610e28565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105085780820151818401526020810190506104ed565b50505050905090810190601f1680156105355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105856004803603602081101561055957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610eca565b6040518082815260200191505060405180910390f35b6105a3610f9f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105e35780820151818401526020810190506105c8565b50505050905090810190601f1680156106105780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61066c6004803603604081101561063457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611041565b005b6107716004803603608081101561068457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156106eb57600080fd5b8201836020820111156106fd57600080fd5b8035906020019184600183028401116401000000008311171561071f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111f9565b005b61079f6004803603602081101561078957600080fd5b8101908080359060200190929190505050611271565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107df5780820151818401526020810190506107c4565b50505050905090810190601f16801561080c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61087c6004803603604081101561083057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611473565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109955780601f1061096a57610100808354040283529160200191610995565b820191906000526020600020905b81548152906001019060200180831161097857829003601f168201915b5050505050905090565b60006109aa82611507565b6109ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612584602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a4582610d60565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610acc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806126086021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610aeb611579565b73ffffffffffffffffffffffffffffffffffffffff161480610b1a5750610b1981610b14611579565b611473565b5b610b6f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806124f96038913960400191505060405180910390fd5b610b798383611581565b505050565b6000600780549050905090565b610b9c610b96611579565b8261163a565b610bf1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806126296031913960400191505060405180910390fd5b610bfc83838361172e565b505050565b6000610c0c83610eca565b8210610c63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061244c602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610cad57fe5b9060005260206000200154905092915050565b610cdb838383604051806020016040528060008152506111f9565b505050565b6000610cea610b7e565b8210610d41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061265a602c913960400191505060405180910390fd5b60078281548110610d4e57fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061255b6029913960400191505060405180910390fd5b80915050919050565b6060600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ec05780601f10610e9557610100808354040283529160200191610ec0565b820191906000526020600020905b815481529060010190602001808311610ea357829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612531602a913960400191505060405180910390fd5b610f98600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611996565b9050919050565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110375780601f1061100c57610100808354040283529160200191611037565b820191906000526020600020905b81548152906001019060200180831161101a57829003601f168201915b5050505050905090565b611049611579565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600460006110f7611579565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166111a4611579565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61120a611204611579565b8361163a565b61125f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806126296031913960400191505060405180910390fd5b61126b848484846119a4565b50505050565b606061127c82611507565b6112d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806125d9602f913960400191505060405180910390fd5b6060600b60008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561137a5780601f1061134f5761010080835404028352916020019161137a565b820191906000526020600020905b81548152906001019060200180831161135d57829003601f168201915b505050505090506000815114156113a3576040518060200160405280600081525091505061146e565b600c8160405160200180838054600181600116156101000203166002900480156114045780601f106113e2576101008083540402835291820191611404565b820191906000526020600020905b8154815290600101906020018083116113f0575b505082805190602001908083835b602083106114355780518252602082019150602081019050602083039250611412565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166115f483610d60565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061164582611507565b61169a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806124cd602c913960400191505060405180910390fd5b60006116a583610d60565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061171457508373ffffffffffffffffffffffffffffffffffffffff166116fc8461099f565b73ffffffffffffffffffffffffffffffffffffffff16145b8061172557506117248185611473565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661174e82610d60565b73ffffffffffffffffffffffffffffffffffffffff16146117ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806125b06029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611840576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806124a96024913960400191505060405180910390fd5b61184b838383611a16565b611856600082611581565b61189d600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a26565b6118e4600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a49565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600081600001549050919050565b6119af84848461172e565b6119bb84848484611a5f565b611a10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806124776032913960400191505060405180910390fd5b50505050565b611a21838383611d9b565b505050565b611a3e60018260000154611e3090919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000611a808473ffffffffffffffffffffffffffffffffffffffff16611e7a565b611a8d5760019050611d93565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b611ad1611579565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b81578082015181840152602081019050611b66565b50505050905090810190601f168015611bae5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310611c465780518252602082019150602081019050602083039250611c23565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611ca8576040519150601f19603f3d011682016040523d82523d6000602084013e611cad565b606091505b509150915081611d1b57600081511115611cca5780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806124776032913960400191505060405180910390fd5b6000818060200190516020811015611d3257600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b611da6838383611ec5565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e2b576000600b600083815260200190815260200160002080546001816001161561010002031660029004905014611e2a57600b60008281526020019081526020016000206000611e2991906123de565b5b5b505050565b6000611e7283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611f9e565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611ebc57506000801b8214155b92505050919050565b611ed083838361205e565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611f1d57611f0f8282612063565b611f1881612127565b611f99565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f8357611f5c8382612170565b60006006600083815260200190815260200160002081905550611f7e81612319565b611f98565b611f8d8382612170565b611f978282612063565b5b5b505050565b600083831115829061204b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612010578082015181840152602081019050611ff5565b50505050905090810190601f16801561203d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006121c86001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611e3090919063ffffffff16565b90506000600660008481526020019081526020016000205490508181146122b5576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061223557fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061228d57fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806122fd57fe5b6001900381819060005260206000200160009055905550505050565b60006123346001600780549050611e3090919063ffffffff16565b905060006008600084815260200190815260200160002054905060006007838154811061235d57fe5b90600052602060002001549050806007838154811061237857fe5b906000526020600020018190555081600860008381526020019081526020016000208190555060078054806123a957fe5b600190038181906000526020600020016000905590556000600860008681526020019081526020016000208190555050505050565b50805460018160011615610100020316600290046000825580601f106124045750612423565b601f0160209004906000526020600020908101906124229190612426565b5b50565b61244891905b8082111561244457600081600090555060010161242c565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a26469706673582212201916bcdcb17ce68947bd72857de3876665e8403251cf134e3566221f79eeb3b164736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a257806395d89b411161007157806395d89b411461059b578063a22cb4651461061e578063b88d4fde1461066e578063c87b56dd14610773578063e985e9c51461081a5761010b565b80634f6ccce7146104105780636352211e146104525780636c0360eb146104c057806370a08231146105435761010b565b806318160ddd116100de57806318160ddd146102b457806323b872dd146102d25780632f745c591461034057806342842e0e146103a25761010b565b806301ffc9a71461011057806306fdde0314610175578063081812fc146101f8578063095ea7b314610266575b600080fd5b61015b6004803603602081101561012657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610896565b604051808215151515815260200191505060405180910390f35b61017d6108fd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101bd5780820151818401526020810190506101a2565b50505050905090810190601f1680156101ea5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102246004803603602081101561020e57600080fd5b810190808035906020019092919050505061099f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b26004803603604081101561027c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a3a565b005b6102bc610b7e565b6040518082815260200191505060405180910390f35b61033e600480360360608110156102e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b8b565b005b61038c6004803603604081101561035657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c01565b6040518082815260200191505060405180910390f35b61040e600480360360608110156103b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cc0565b005b61043c6004803603602081101561042657600080fd5b8101908080359060200190929190505050610ce0565b6040518082815260200191505060405180910390f35b61047e6004803603602081101561046857600080fd5b8101908080359060200190929190505050610d60565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c8610e28565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105085780820151818401526020810190506104ed565b50505050905090810190601f1680156105355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105856004803603602081101561055957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610eca565b6040518082815260200191505060405180910390f35b6105a3610f9f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105e35780820151818401526020810190506105c8565b50505050905090810190601f1680156106105780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61066c6004803603604081101561063457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611041565b005b6107716004803603608081101561068457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156106eb57600080fd5b8201836020820111156106fd57600080fd5b8035906020019184600183028401116401000000008311171561071f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111f9565b005b61079f6004803603602081101561078957600080fd5b8101908080359060200190929190505050611271565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107df5780820151818401526020810190506107c4565b50505050905090810190601f16801561080c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61087c6004803603604081101561083057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611473565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109955780601f1061096a57610100808354040283529160200191610995565b820191906000526020600020905b81548152906001019060200180831161097857829003601f168201915b5050505050905090565b60006109aa82611507565b6109ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612584602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a4582610d60565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610acc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806126086021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610aeb611579565b73ffffffffffffffffffffffffffffffffffffffff161480610b1a5750610b1981610b14611579565b611473565b5b610b6f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806124f96038913960400191505060405180910390fd5b610b798383611581565b505050565b6000600780549050905090565b610b9c610b96611579565b8261163a565b610bf1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806126296031913960400191505060405180910390fd5b610bfc83838361172e565b505050565b6000610c0c83610eca565b8210610c63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061244c602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610cad57fe5b9060005260206000200154905092915050565b610cdb838383604051806020016040528060008152506111f9565b505050565b6000610cea610b7e565b8210610d41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061265a602c913960400191505060405180910390fd5b60078281548110610d4e57fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061255b6029913960400191505060405180910390fd5b80915050919050565b6060600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ec05780601f10610e9557610100808354040283529160200191610ec0565b820191906000526020600020905b815481529060010190602001808311610ea357829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612531602a913960400191505060405180910390fd5b610f98600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611996565b9050919050565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110375780601f1061100c57610100808354040283529160200191611037565b820191906000526020600020905b81548152906001019060200180831161101a57829003601f168201915b5050505050905090565b611049611579565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600460006110f7611579565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166111a4611579565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61120a611204611579565b8361163a565b61125f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806126296031913960400191505060405180910390fd5b61126b848484846119a4565b50505050565b606061127c82611507565b6112d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806125d9602f913960400191505060405180910390fd5b6060600b60008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561137a5780601f1061134f5761010080835404028352916020019161137a565b820191906000526020600020905b81548152906001019060200180831161135d57829003601f168201915b505050505090506000815114156113a3576040518060200160405280600081525091505061146e565b600c8160405160200180838054600181600116156101000203166002900480156114045780601f106113e2576101008083540402835291820191611404565b820191906000526020600020905b8154815290600101906020018083116113f0575b505082805190602001908083835b602083106114355780518252602082019150602081019050602083039250611412565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166115f483610d60565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061164582611507565b61169a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806124cd602c913960400191505060405180910390fd5b60006116a583610d60565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061171457508373ffffffffffffffffffffffffffffffffffffffff166116fc8461099f565b73ffffffffffffffffffffffffffffffffffffffff16145b8061172557506117248185611473565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661174e82610d60565b73ffffffffffffffffffffffffffffffffffffffff16146117ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806125b06029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611840576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806124a96024913960400191505060405180910390fd5b61184b838383611a16565b611856600082611581565b61189d600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a26565b6118e4600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a49565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600081600001549050919050565b6119af84848461172e565b6119bb84848484611a5f565b611a10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806124776032913960400191505060405180910390fd5b50505050565b611a21838383611d9b565b505050565b611a3e60018260000154611e3090919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000611a808473ffffffffffffffffffffffffffffffffffffffff16611e7a565b611a8d5760019050611d93565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b611ad1611579565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b81578082015181840152602081019050611b66565b50505050905090810190601f168015611bae5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310611c465780518252602082019150602081019050602083039250611c23565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611ca8576040519150601f19603f3d011682016040523d82523d6000602084013e611cad565b606091505b509150915081611d1b57600081511115611cca5780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806124776032913960400191505060405180910390fd5b6000818060200190516020811015611d3257600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b611da6838383611ec5565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e2b576000600b600083815260200190815260200160002080546001816001161561010002031660029004905014611e2a57600b60008281526020019081526020016000206000611e2991906123de565b5b5b505050565b6000611e7283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611f9e565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611ebc57506000801b8214155b92505050919050565b611ed083838361205e565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611f1d57611f0f8282612063565b611f1881612127565b611f99565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f8357611f5c8382612170565b60006006600083815260200190815260200160002081905550611f7e81612319565b611f98565b611f8d8382612170565b611f978282612063565b5b5b505050565b600083831115829061204b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612010578082015181840152602081019050611ff5565b50505050905090810190601f16801561203d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006121c86001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611e3090919063ffffffff16565b90506000600660008481526020019081526020016000205490508181146122b5576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061223557fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061228d57fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806122fd57fe5b6001900381819060005260206000200160009055905550505050565b60006123346001600780549050611e3090919063ffffffff16565b905060006008600084815260200190815260200160002054905060006007838154811061235d57fe5b90600052602060002001549050806007838154811061237857fe5b906000526020600020018190555081600860008381526020019081526020016000208190555060078054806123a957fe5b600190038181906000526020600020016000905590556000600860008681526020019081526020016000208190555050505050565b50805460018160011615610100020316600290046000825580601f106124045750612423565b601f0160209004906000526020600020908101906124229190612426565b5b50565b61244891905b8082111561244457600081600090555060010161242c565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a26469706673582212201916bcdcb17ce68947bd72857de3876665e8403251cf134e3566221f79eeb3b164736f6c63430006000033",
  "sourceMap": "375:397:9:-:0;;;438:94;8:9:-1;5:2;;;30:1;27;20:12;5:2;438:94:9;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;438:94:9;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;438:94:9;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;438:94:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;438:94:9;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;438:94:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;515:4;521:6;742:40:5;399:10;761:20;;742:18;;;:40;;:::i;:::-;2259::6;2129:10;2278:20;;2259:18;;;:40;;:::i;:::-;1369:51:8;1177:10;1388:31;;1369:18;;;:51;;:::i;:::-;927:4:10;919:5;:12;;;;;;;;;;;;:::i;:::-;;952:6;942:7;:16;;;;;;;;;;;;:::i;:::-;;1049:49;775:10;1068:29;;1049:18;;;:49;;:::i;:::-;846:260;;438:94:9;;375:397;;1498:201:5;1597:10;1582:25;;:11;:25;;;;;1574:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:4;1651:20;:33;1672:11;1651:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1498:201;:::o;375:397:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "375:397:9:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;375:397:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:144:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:144:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1217:94:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1217:94:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4315:213:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4315:213:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3632:390;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3632:390:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2210:105:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6063:309:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6063:309:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1810:241:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1810:241:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7034:151:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7034:151:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2661:208:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2661:208:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2964:237:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2964:237:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3513:91:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3513:91:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:220:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2518:220:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1426:98:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1426:98:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:295:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4835:295:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7922:289;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7922:289:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7922:289:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7922:289:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7922:289:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7922:289:6;;;;;;;;;;;;;;;:::i;:::-;;1837:566:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1837:566:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:566:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5460:156:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5460:156:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;947:144:5;1026:4;1050:20;:33;1071:11;1050:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:40;;947:144;;;:::o;1217:94:10:-;1265:13;1298:5;1291:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1217:94;:::o;4315:213:6:-;4383:7;4411:16;4419:7;4411;:16::i;:::-;4403:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4496:15;:24;4512:7;4496:24;;;;;;;;;;;;;;;;;;;;;4489:31;;4315:213;;;:::o;3632:390::-;3713:13;3729:16;3737:7;3729;:16::i;:::-;3713:32;;3770:5;3764:11;;:2;:11;;;;3756:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3850:5;3834:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3859:37;3876:5;3883:12;:10;:12::i;:::-;3859:16;:37::i;:::-;3834:62;3826:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3993:21;4002:2;4006:7;3993:8;:21::i;:::-;3632:390;;;:::o;2210:105:8:-;2263:7;2290:10;:17;;;;2283:24;;2210:105;:::o;6063:309:6:-;6224:41;6243:12;:10;:12::i;:::-;6257:7;6224:18;:41::i;:::-;6216:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6332:32;6346:4;6352:2;6356:7;6332:13;:32::i;:::-;6063:309;;;:::o;1810:241:8:-;1899:7;1935:16;1945:5;1935:9;:16::i;:::-;1927:5;:24;1919:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2017:12;:19;2030:5;2017:19;;;;;;;;;;;;;;;2037:5;2017:26;;;;;;;;;;;;;;;;2010:33;;1810:241;;;;:::o;7034:151:6:-;7138:39;7155:4;7161:2;7165:7;7138:39;;;;;;;;;;;;:16;:39::i;:::-;7034:151;;;:::o;2661:208:8:-;2728:7;2764:13;:11;:13::i;:::-;2756:5;:21;2748:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2844:10;2855:5;2844:17;;;;;;;;;;;;;;;;2837:24;;2661:208;;;:::o;2964:237:6:-;3028:7;3048:13;3064:11;:20;3076:7;3064:20;;;;;;;;;;;;;;;;;;;;;3048:36;;3120:1;3103:19;;:5;:19;;;;3095:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3188:5;3181:12;;;2964:237;;;:::o;3513:91:10:-;3555:13;3588:8;3581:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3513:91;:::o;2518:220:6:-;2582:7;2627:1;2610:19;;:5;:19;;;;2602:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2696:34;:17;:24;2714:5;2696:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2689:41;;2518:220;;;:::o;1426:98:10:-;1476:13;1509:7;1502:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1426:98;:::o;4835:295:6:-;4950:12;:10;:12::i;:::-;4938:24;;:8;:24;;;;4930:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5050:8;5005:18;:32;5024:12;:10;:12::i;:::-;5005:32;;;;;;;;;;;;;;;:42;5038:8;5005:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;5103:8;5074:48;;5089:12;:10;:12::i;:::-;5074:48;;;5113:8;5074:48;;;;;;;;;;;;;;;;;;;;;;4835:295;;:::o;7922:289::-;8054:41;8073:12;:10;:12::i;:::-;8087:7;8054:18;:41::i;:::-;8046:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8160:43;8178:4;8184:2;8188:7;8197:5;8160:17;:43::i;:::-;7922:289;;;;:::o;1837:566:10:-;1904:13;1938:16;1946:7;1938;:16::i;:::-;1930:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2019:23;2045:10;:19;2056:7;2045:19;;;;;;;;;;;2019:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2202:1;2181:9;2175:23;:28;2171:225;;;2220:9;;;;;;;;;;;;;;;;;2171:225;2363:8;2373:9;2346:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2346:37:10;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2346:37:10;;;2332:52;;;1837:566;;;;:::o;5460:156:6:-;5549:4;5573:18;:25;5592:5;5573:25;;;;;;;;;;;;;;;:35;5599:8;5573:35;;;;;;;;;;;;;;;;;;;;;;;;;5566:42;;5460:156;;;;:::o;9412:155::-;9469:4;9486:13;9502:11;:20;9514:7;9502:20;;;;;;;;;;;;;;;;;;;;;9486:36;;9557:1;9540:19;;:5;:19;;;;9533:26;;;9412:155;;;:::o;752:106:3:-;805:15;840:10;833:17;;752:106;:::o;16126:158:6:-;16219:2;16192:15;:24;16208:7;16192:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16268:7;16264:2;16237:39;;16246:16;16254:7;16246;:16::i;:::-;16237:39;;;;;;;;;;;;16126:158;;:::o;9937:333::-;10022:4;10047:16;10055:7;10047;:16::i;:::-;10039:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10123:13;10139:16;10147:7;10139;:16::i;:::-;10123:32;;10185:5;10174:16;;:7;:16;;;:51;;;;10218:7;10194:31;;:20;10206:7;10194:11;:20::i;:::-;:31;;;10174:51;:87;;;;10229:32;10246:5;10253:7;10229:16;:32::i;:::-;10174:87;10166:96;;;9937:333;;;;:::o;13826:553::-;13948:4;13928:24;;:16;13936:7;13928;:16::i;:::-;:24;;;13920:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14031:1;14017:16;;:2;:16;;;;14009:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14087:39;14108:4;14114:2;14118:7;14087:20;:39::i;:::-;14167:29;14184:1;14188:7;14167:8;:29::i;:::-;14209:35;:17;:23;14227:4;14209:23;;;;;;;;;;;;;;;:33;:35::i;:::-;14255:33;:17;:21;14273:2;14255:21;;;;;;;;;;;;;;;:31;:33::i;:::-;14324:2;14301:11;:20;14313:7;14301:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;14363:7;14359:2;14344:27;;14353:4;14344:27;;;;;;;;;;;;13826:553;;;:::o;1084:114:4:-;1149:7;1176;:14;;;1169:21;;1084:114;;;:::o;8930:280:6:-;9048:32;9062:4;9068:2;9072:7;9048:13;:32::i;:::-;9099:48;9122:4;9128:2;9132:7;9141:5;9099:22;:48::i;:::-;9091:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8930:280;;;;:::o;540:229:9:-;716:45;743:4;749:2;753:7;716:26;:45::i;:::-;540:229;;;:::o;1395:110:4:-;1476:21;1495:1;1476:7;:14;;;:18;;:21;;;;:::i;:::-;1459:7;:14;;:38;;;;1395:110;:::o;1206:181::-;1378:1;1360:7;:14;;;:19;;;;;;;;;;;1206:181;:::o;15031:1087:6:-;15161:4;15188:15;:2;:13;;;:15::i;:::-;15183:60;;15227:4;15220:11;;;;15183:60;15314:12;15328:23;15355:2;:7;;15416:2;15400:36;;;:45;;;;15460:12;:10;:12::i;:::-;15487:4;15506:7;15528:5;15363:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15363:181:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15363:181:6;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;15363:181:6;15355:190;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;15355:190:6;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;15313:232:6;;;;15561:7;15556:555;;15609:1;15589:10;:17;:21;15585:384;;;15757:10;15751:17;15818:15;15805:10;15801:2;15797:19;15790:44;15705:148;15893:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15556:555;16001:13;16028:10;16017:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16017:32:6;;;;;;;;;;;;;;;;16001:48;;719:10;16082:16;;16072:26;;;:6;:26;;;;16064:35;;;;;15031:1087;;;;;;;:::o;3614:391:10:-;3724:45;3751:4;3757:2;3761:7;3724:26;:45::i;:::-;3800:1;3786:16;;:2;:16;;;3782:216;;;3923:1;3892:10;:19;3903:7;3892:19;;;;;;;;;;;3886:33;;;;;;;;;;;;;;;;:38;3882:105;;3952:10;:19;3963:7;3952:19;;;;;;;;;;;;3945:26;;;;:::i;:::-;3882:105;3782:216;3614:391;;;:::o;1315:136:20:-;1373:7;1400:43;1404:1;1407;1400:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1393:50;;1315:136;;;;:::o;708:619:0:-;768:4;1030:16;1057:19;1079:66;1057:88;;;;1248:7;1236:20;1224:32;;1288:11;1276:8;:23;;:42;;;;;1315:3;1303:15;;:8;:15;;1276:42;1268:51;;;;708:619;;;:::o;2877:837:8:-;2987:45;3014:4;3020:2;3024:7;2987:26;:45::i;:::-;3065:1;3049:18;;:4;:18;;;3045:662;;;3113:40;3141:2;3145:7;3113:27;:40::i;:::-;3168;3200:7;3168:31;:40::i;:::-;3045:662;;;3244:1;3230:16;;:2;:16;;;3226:481;;;3292:47;3325:4;3331:7;3292:32;:47::i;:::-;3497:1;3468:17;:26;3486:7;3468:26;;;;;;;;;;;:30;;;;3515:45;3552:7;3515:36;:45::i;:::-;3226:481;;;3593:47;3626:4;3632:7;3593:32;:47::i;:::-;3655:40;3683:2;3687:7;3655:27;:40::i;:::-;3226:481;3045:662;2877:837;;;:::o;1788:192:20:-;1874:7;1907:1;1902;:6;;1910:12;1894:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1894:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:9;1950:1;1946;:5;1934:17;;1971:1;1964:8;;;1788:192;;;;;:::o;16832:93:6:-;;;;:::o;4353:186:8:-;4467:12;:16;4480:2;4467:16;;;;;;;;;;;;;;;:23;;;;4438:17;:26;4456:7;4438:26;;;;;;;;;;;:52;;;;4501:12;:16;4514:2;4501:16;;;;;;;;;;;;;;;4523:7;4501:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4501:30:8;;;;;;;;;;;;;;;;;;;4353:186;;:::o;4740:164::-;4844:10;:17;;;;4817:15;:24;4833:7;4817:24;;;;;;;;;;;:44;;;;4872:10;4888:7;4872:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4872:24:8;;;;;;;;;;;;;;;;;;;4740:164;:::o;5531:1135::-;5797:22;5822:32;5852:1;5822:12;:18;5835:4;5822:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;5797:57;;5865:18;5886:17;:26;5904:7;5886:26;;;;;;;;;;;;5865:47;;6033:14;6019:10;:28;6015:328;;6064:19;6086:12;:18;6099:4;6086:18;;;;;;;;;;;;;;;6105:14;6086:34;;;;;;;;;;;;;;;;6064:56;;6170:11;6137:12;:18;6150:4;6137:18;;;;;;;;;;;;;;;6156:10;6137:30;;;;;;;;;;;;;;;:44;;;;6287:10;6254:17;:30;6272:11;6254:30;;;;;;;;;;;:43;;;;6015:328;;6422:12;:18;6435:4;6422:18;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;5531:1135;;;;:::o;6961:1070::-;7214:22;7239:24;7261:1;7239:10;:17;;;;:21;;:24;;;;:::i;:::-;7214:49;;7274:18;7295:15;:24;7311:7;7295:24;;;;;;;;;;;;7274:45;;7646:19;7668:10;7679:14;7668:26;;;;;;;;;;;;;;;;7646:48;;7732:11;7707:10;7718;7707:22;;;;;;;;;;;;;;;:36;;;;7843:10;7812:15;:28;7828:11;7812:28;;;;;;;;;;;:41;;;;7966:10;:16;;;;;;;;;;;;;;;;;;;;;;;;8022:1;7995:15;:24;8011:7;7995:24;;;;;;;;;;;:28;;;;6961:1070;;;;:::o;375:397:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.6.0;\r\n\r\nimport \"./ERC721Enumerable.sol\";\r\nimport \"./ERC721Metadata.sol\";\r\n\r\n/**\r\n * @title Full ERC721 Token\r\n * @dev This implementation includes all the required and some optional functionality of the ERC721 standard\r\n * Moreover, it includes approve all functionality using operator terminology.\r\n *\r\n * See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ncontract ERC721Full is ERC721Enumerable, ERC721Metadata {\r\n    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) { }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId)\r\n        virtual\r\n        override(ERC721Enumerable, ERC721Metadata)\r\n        internal\r\n    {\r\n        super._beforeTokenTransfer(from, to, tokenId);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Dieu\\Desktop\\Blockchain Programming\\ERC721 Coin\\contracts\\ERC721Full.sol",
  "ast": {
    "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        1454
      ]
    },
    "id": 1455,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1414,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1415,
        "nodeType": "ImportDirective",
        "scope": 1455,
        "sourceUnit": 1413,
        "src": "27:32:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1416,
        "nodeType": "ImportDirective",
        "scope": 1455,
        "sourceUnit": 1646,
        "src": "61:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1417,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1412,
              "src": "398:16:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1412",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 1418,
            "nodeType": "InheritanceSpecifier",
            "src": "398:16:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1419,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1645,
              "src": "416:14:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1645",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1420,
            "nodeType": "InheritanceSpecifier",
            "src": "416:14:9"
          }
        ],
        "contractDependencies": [
          227,
          329,
          1053,
          1412,
          1645,
          1655,
          1758,
          1785,
          1808
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n\n * See https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 1454,
        "linearizedBaseContracts": [
          1454,
          1645,
          1808,
          1412,
          1785,
          1053,
          1758,
          329,
          1655,
          227
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1431,
              "nodeType": "Block",
              "src": "529:3:9",
              "statements": []
            },
            "documentation": null,
            "id": 1432,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1427,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1422,
                    "src": "515:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1428,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1424,
                    "src": "521:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1429,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1426,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1645,
                  "src": "500:14:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1645_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "500:28:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1422,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1432,
                  "src": "451:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1421,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1424,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1432,
                  "src": "471:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1423,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "450:42:9"
            },
            "returnParameters": {
              "id": 1430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "529:0:9"
            },
            "scope": 1454,
            "src": "438:94:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1249,
              1644
            ],
            "body": {
              "id": 1452,
              "nodeType": "Block",
              "src": "705:64:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1447,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1434,
                        "src": "743:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1448,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "749:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1449,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1438,
                        "src": "753:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1444,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2495,
                        "src": "716:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721Full_$1454",
                          "typeString": "contract super ERC721Full"
                        }
                      },
                      "id": 1446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1644,
                      "src": "716:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "716:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1451,
                  "nodeType": "ExpressionStatement",
                  "src": "716:45:9"
                }
              ]
            },
            "documentation": null,
            "id": 1453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1442,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 1440,
                  "name": "ERC721Enumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1412,
                  "src": "648:16:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Enumerable_$1412",
                    "typeString": "contract ERC721Enumerable"
                  }
                },
                {
                  "contractScope": null,
                  "id": 1441,
                  "name": "ERC721Metadata",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1645,
                  "src": "666:14:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Metadata_$1645",
                    "typeString": "contract ERC721Metadata"
                  }
                }
              ],
              "src": "639:42:9"
            },
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1434,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1453,
                  "src": "570:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1436,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1453,
                  "src": "584:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1438,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1453,
                  "src": "596:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "569:43:9"
            },
            "returnParameters": {
              "id": 1443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:9"
            },
            "scope": 1454,
            "src": "540:229:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1455,
        "src": "375:397:9"
      }
    ],
    "src": "0:772:9"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        1454
      ]
    },
    "id": 1455,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1414,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1415,
        "nodeType": "ImportDirective",
        "scope": 1455,
        "sourceUnit": 1413,
        "src": "27:32:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1416,
        "nodeType": "ImportDirective",
        "scope": 1455,
        "sourceUnit": 1646,
        "src": "61:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1417,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1412,
              "src": "398:16:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1412",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 1418,
            "nodeType": "InheritanceSpecifier",
            "src": "398:16:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1419,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1645,
              "src": "416:14:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1645",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1420,
            "nodeType": "InheritanceSpecifier",
            "src": "416:14:9"
          }
        ],
        "contractDependencies": [
          227,
          329,
          1053,
          1412,
          1645,
          1655,
          1758,
          1785,
          1808
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n\n * See https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 1454,
        "linearizedBaseContracts": [
          1454,
          1645,
          1808,
          1412,
          1785,
          1053,
          1758,
          329,
          1655,
          227
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1431,
              "nodeType": "Block",
              "src": "529:3:9",
              "statements": []
            },
            "documentation": null,
            "id": 1432,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1427,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1422,
                    "src": "515:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1428,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1424,
                    "src": "521:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1429,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1426,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1645,
                  "src": "500:14:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1645_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "500:28:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1422,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1432,
                  "src": "451:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1421,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1424,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1432,
                  "src": "471:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1423,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "450:42:9"
            },
            "returnParameters": {
              "id": 1430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "529:0:9"
            },
            "scope": 1454,
            "src": "438:94:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1249,
              1644
            ],
            "body": {
              "id": 1452,
              "nodeType": "Block",
              "src": "705:64:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1447,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1434,
                        "src": "743:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1448,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "749:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1449,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1438,
                        "src": "753:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1444,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2495,
                        "src": "716:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721Full_$1454",
                          "typeString": "contract super ERC721Full"
                        }
                      },
                      "id": 1446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1644,
                      "src": "716:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "716:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1451,
                  "nodeType": "ExpressionStatement",
                  "src": "716:45:9"
                }
              ]
            },
            "documentation": null,
            "id": 1453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1442,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 1440,
                  "name": "ERC721Enumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1412,
                  "src": "648:16:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Enumerable_$1412",
                    "typeString": "contract ERC721Enumerable"
                  }
                },
                {
                  "contractScope": null,
                  "id": 1441,
                  "name": "ERC721Metadata",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1645,
                  "src": "666:14:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Metadata_$1645",
                    "typeString": "contract ERC721Metadata"
                  }
                }
              ],
              "src": "639:42:9"
            },
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1434,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1453,
                  "src": "570:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1436,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1453,
                  "src": "584:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1438,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1453,
                  "src": "596:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "569:43:9"
            },
            "returnParameters": {
              "id": 1443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:9"
            },
            "scope": 1454,
            "src": "540:229:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1455,
        "src": "375:397:9"
      }
    ],
    "src": "0:772:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-11T20:33:22.623Z",
  "devdoc": {
    "details": "This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology.  * See https://eips.ethereum.org/EIPS/eip-721",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.     * _Available since v2.5.0._"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.      * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.      * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token"
  },
  "userdoc": {
    "methods": {}
  }
}