{
  "contractName": "MyToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "AnimalToken",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "ANI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddedToWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "RemovedFromWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "nom",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "espece",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "couleur",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "sexe",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "age",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "taille",
          "type": "int256"
        },
        {
          "internalType": "string",
          "name": "etat",
          "type": "string"
        }
      ],
      "name": "declareAnimal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "registerBreeder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeBreeder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zoo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "nom",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "espece",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "couleur",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "sexe",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "age",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "taille",
          "type": "int256"
        },
        {
          "internalType": "string",
          "name": "etat",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "deadAnimal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"AnimalToken\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ANI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddedToWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RemovedFromWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deadAnimal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"nom\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"espece\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"couleur\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sexe\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"age\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"taille\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"etat\",\"type\":\"string\"}],\"name\":\"declareAnimal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"registerBreeder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeBreeder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zoo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"nom\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"espece\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"couleur\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sexe\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"age\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"taille\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"etat\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/AnimalToken.sol\":\"MyToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Address.sol\":{\"keccak256\":\"0xfaeea3605991a8f569b82232156abfad4135c3bf9ca72c010c04cf19f59fd464\",\"urls\":[\"bzz-raw://44ad68a7cb8bcaede9b830fe4555b09e5a269c560aa4be7702ab175c50acc5a7\",\"dweb:/ipfs/QmSUPEDsYp2Rst8gu9ZjFvLFZYzXPksdaRPut5v7KmGL8R\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Animal.sol\":{\"keccak256\":\"0x20d395e99a5a0030acea3eb41839041e1b3b7f1ffeac3aab929978f421dbb0b0\",\"urls\":[\"bzz-raw://502147049ed9839d37e08627586f47a9572cee9fe219d52e6e8a482c6c842179\",\"dweb:/ipfs/QmfFZStGCHmg6LzDdGy248sCJfty2QWDBZ16d2ZDATEZkG\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/AnimalToken.sol\":{\"keccak256\":\"0xaa67f2b471afeb72a5de24e03f9d5d29dc851b8f5d5dd221328129a0818cdf2c\",\"urls\":[\"bzz-raw://b335e85e654772742c603d5f2ac5e172a9b18f3d80796148824d5a04f1790938\",\"dweb:/ipfs/QmUF3eVu7aR5X4kufWyKdD5VYENuzK1neUnpEk2MvWFbbP\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Context.sol\":{\"keccak256\":\"0xfb796dee5670671e060ed6c1392d3dda7d0bf97ad530d83ea5efc398f45e34dc\",\"urls\":[\"bzz-raw://0a91d0d3f0af61ec37cfea874545104f6994fbe7188192ecb1dfb34c7adcf059\",\"dweb:/ipfs/Qmba9dY1U67NRz1sRBWebYYkhFbcbV78PPs9TGgZUkqfnY\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Counters.sol\":{\"keccak256\":\"0xbfc6050b812862c08ddf99624451c05c8be668c656d7cbc0ecb70f88900d20e4\",\"urls\":[\"bzz-raw://09717a428e8b7054b98562ffefa9445b4c6c271834405c77e9e4caa653179cc6\",\"dweb:/ipfs/QmbmYZV3q2PAk2S9L7iPD4pohR5Jn4DFbeGgj4q5NwL1Aq\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC165.sol\":{\"keccak256\":\"0xe22f5a85b261d1def438a058550bd597faaae31007fda71fbb297748f00ec49f\",\"urls\":[\"bzz-raw://66ff8b519ba442b435fbcd3a9b23a53d8887fc5712a30683bcafd6b74fb71ac4\",\"dweb:/ipfs/QmQXCd9GBssDJBAXHvHsxC86BRitXMcBmA53USJMKN8HTG\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721.sol\":{\"keccak256\":\"0x66a7b2d629fba326808a13a86bcb08ace472a1128e27303f8bc82c7c865a9521\",\"urls\":[\"bzz-raw://5dbd27df3a14c25af99b447076a8dadcce8b195166e9cd0213cf6549488c8c01\",\"dweb:/ipfs/QmYmV2LJC6QRDfPdTNVYrS5FvaDHe1MEqnGraKbQ4oJbgb\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Burnable.sol\":{\"keccak256\":\"0x0d1678c4571548e2ecc5886254cd378e23ce8ce8a682c85cc45b7238386ffdd0\",\"urls\":[\"bzz-raw://d7c05af4dc51ba8ce602e24c1b7fc329dee0cfd446489b0db6f545e0e84a1594\",\"dweb:/ipfs/QmY7pXiXSE8BN65mYDPLx6ZPRys1C3nigvg8JkdEBRwNHT\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Enumerable.sol\":{\"keccak256\":\"0x07d928410d63a0a428207b77befbdc66163569e78208a7e7e4df8d0a4f3afaaf\",\"urls\":[\"bzz-raw://0f831e0057e2fc5795030a8174e040a70f54abfb0a391273a56bc18a9945853a\",\"dweb:/ipfs/Qmcxd5D6AfB6QaYz4AssQjttbFpZaEoxX289jFCVgseinh\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Full.sol\":{\"keccak256\":\"0x68293510ddd42da1d6c49abd93226b9bd3cf1f3d4b55dc0c9130a4c0156f73f4\",\"urls\":[\"bzz-raw://0ffe763bb504bfa6fe13a6e3cb380ffe2d98ad2cebb17ff8d634f63fe456151b\",\"dweb:/ipfs/QmVr1RRbVGYryongGd5STjCCqAgV9jxW3LtdxFae6hCLee\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Metadata.sol\":{\"keccak256\":\"0xac8573a5928a19f7eb6992ca95967cf6eeeed59a164c66e485d145f93151a8e3\",\"urls\":[\"bzz-raw://8aff48ba89dece3cd5e3b5618124c47cfccf6f58eabed8ae5c210feb04cd7d5c\",\"dweb:/ipfs/QmQkXbPNwmhjF5YnZFfpMzVaMY4oUB2139YyYfEqRw1mrA\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/IERC165.sol\":{\"keccak256\":\"0x341783c84450594ca1d3bd0025ff752b6581bf72002c0de3961e2b6a860d2a30\",\"urls\":[\"bzz-raw://fd49dfb635406db1dc28855a42ee757ef4ae5a5d45a3fbde6aeb91f3a9c93b1d\",\"dweb:/ipfs/QmbS7AzZMRQ43nNJ5xW1LP28A8cm2daDEr18BcdZgaZASr\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/IERC721.sol\":{\"keccak256\":\"0x5df67bcd2ece6cd049f4f7c6f1b78db0123ec0956f4d0bcaff38bc18d2f91329\",\"urls\":[\"bzz-raw://2abf0fd49227b98f4fe23dce8ba06e857b15258e65e7d16a742c19ece232df40\",\"dweb:/ipfs/QmYr5p7JDP7gkvfAmMCQCvgqVbPBqxBRcNRssc3Z6cNSkB\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/IERC721Enumerable.sol\":{\"keccak256\":\"0x3c161ae52b5cf88f77ea4f164cf9ef0962d19394176632280661dcc8caef7b40\",\"urls\":[\"bzz-raw://765310e26f7fea551e123c97a7644c848e5f1a6b01c94badb1d406e58bc1ac5d\",\"dweb:/ipfs/QmcMW6NJAKuGrRajZPog9uwd7rvJC6gLWJwL7CrCuKXH5H\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/IERC721Metadata.sol\":{\"keccak256\":\"0x3727e82c5e62152dfb50e640c4b35bfdea997fdfa6034aebefd7194b897e3098\",\"urls\":[\"bzz-raw://a60345b2dae36dffa91ae55107e7af8c8f15001edb663eb564b20e0e43e718a0\",\"dweb:/ipfs/QmNegK4uMeaVimkxKqiq8gy6aq6YtHUzA7KoJ5ir4TkxJU\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x272967aea5c83799b8160f7d2e9abd9ebc27c60f22a183e71d12859f9c14b0a4\",\"urls\":[\"bzz-raw://8d8ece089b670e25758b05347c4414b91092dd8c6325fb246776ba86a444659c\",\"dweb:/ipfs/QmXMBXNzRPke2Qa32AE5CXsHJbtt6iJZRbZbnDvcDRABik\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Ownable.sol\":{\"keccak256\":\"0x8e04d0d119ffef36d1e05fc1d5fcb2d6f3cc2c2a5b5c484f782055d020a05ceb\",\"urls\":[\"bzz-raw://f05027d764223719ea1b29bdf1fdfbf77bbc2dd6bcfa0c60263ee50eaa2889d6\",\"dweb:/ipfs/QmT79JYPk7raF4kUWRdEkDdyi4bTEijYMx624CkMemc5Vi\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/SafeMath.sol\":{\"keccak256\":\"0xd2483163645530baa8569a2249aee0f6877f617126c377db05991691e1c478dd\",\"urls\":[\"bzz-raw://26c5ec0b4490d9303fec67dfc332e9eb5d8c2f31cd1c0319ad8e1304bb247044\",\"dweb:/ipfs/QmbAARLa4CSbXLRyfUdE1XYCrW3zHga5iNhPbbF8zXSmno\"]},\"/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/WhiteList.sol\":{\"keccak256\":\"0xdb71e231a1ae60f5cd7fc8b767bb682970bbbfa4f25113d63a70adcdfb746406\",\"urls\":[\"bzz-raw://795736e9c9dd1e850889ae56b2a4469121bf36efc587691baae32741077186ad\",\"dweb:/ipfs/QmbhYF7HE3MzihAcQhCM1jCsUthNta4DV85cTNkwhvTaBf\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620032fc380380620032fc833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b50604052505050620001cd6301ffc9a760e01b620002e860201b60201c565b620001e56380ac58cd60e01b620002e860201b60201c565b6000620001f7620003f160201b60201c565b905080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508160089080519060200190620002ae929190620003f9565b508060099080519060200190620002c7929190620003f9565b50620002e0635b5e139f60e01b620002e860201b60201c565b5050620004a8565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200043c57805160ff19168380011785556200046d565b828001600101855582156200046d579182015b828111156200046c5782518255916020019190600101906200044f565b5b5090506200047c919062000480565b5090565b620004a591905b80821115620004a157600081600090555060010162000487565b5090565b90565b612e4480620004b86000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806352d5aca0116100b85780638f32d59b1161007c5780638f32d59b14610b07578063a22cb46514610b29578063b88d4fde14610b79578063e985e9c514610c7e578063ec9b6db914610cfa578063f2fde38b14610d2857610137565b806352d5aca0146106b75780636352211e146109ed57806370a0823114610a5b578063715018a614610ab35780638da5cb5b14610abd57610137565b806342842e0e116100ff57806342842e0e1461032757806342966c681461039557806344b7b730146103c357806346456c661461062f578063476fd4741461067357610137565b806301ffc9a71461013c578063081812fc146101a1578063095ea7b31461020f57806323b872dd1461025d5780633af32abf146102cb575b600080fd5b6101876004803603602081101561015257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d6c565b604051808215151515815260200191505060405180910390f35b6101cd600480360360208110156101b757600080fd5b8101908080359060200190929190505050610dd3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61025b6004803603604081101561022557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e6e565b005b6102c96004803603606081101561027357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb2565b005b61030d600480360360208110156102e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611028565b604051808215151515815260200191505060405180910390f35b6103936004803603606081101561033d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061107e565b005b6103c1600480360360208110156103ab57600080fd5b810190808035906020019092919050505061109e565b005b6103ef600480360360208110156103d957600080fd5b8101908080359060200190929190505050611110565b60405180898152602001806020018060200180602001806020018881526020018781526020018060200186810386528d818151815260200191508051906020019080838360005b83811015610451578082015181840152602081019050610436565b50505050905090810190601f16801561047e5780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b838110156104b757808201518184015260208101905061049c565b50505050905090810190601f1680156104e45780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b8381101561051d578082015181840152602081019050610502565b50505050905090810190601f16801561054a5780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b83811015610583578082015181840152602081019050610568565b50505050905090810190601f1680156105b05780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b838110156105e95780820151818401526020810190506105ce565b50505050905090810190601f1680156106165780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b6106716004803603602081101561064557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061145d565b005b6106b56004803603602081101561068957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611575565b005b6109eb60048036036101008110156106ce57600080fd5b8101908080359060200190929190803590602001906401000000008111156106f557600080fd5b82018360208201111561070757600080fd5b8035906020019184600183028401116401000000008311171561072957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561078c57600080fd5b82018360208201111561079e57600080fd5b803590602001918460018302840111640100000000831117156107c057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561082357600080fd5b82018360208201111561083557600080fd5b8035906020019184600183028401116401000000008311171561085757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156108ba57600080fd5b8201836020820111156108cc57600080fd5b803590602001918460018302840111640100000000831117156108ee57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291908035906020019064010000000081111561096557600080fd5b82018360208201111561097757600080fd5b8035906020019184600183028401116401000000008311171561099957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061168d565b005b610a1960048036036020811015610a0357600080fd5b81019080803590602001909291905050506117ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a9d60048036036020811015610a7157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611875565b6040518082815260200191505060405180910390f35b610abb61194a565b005b610ac5611a85565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b0f611aaf565b604051808215151515815260200191505060405180910390f35b610b7760048036036040811015610b3f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611b0e565b005b610c7c60048036036080811015610b8f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610bf657600080fd5b820183602082011115610c0857600080fd5b80359060200191846001830284011164010000000083111715610c2a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611cc6565b005b610ce060048036036040811015610c9457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d3e565b604051808215151515815260200191505060405180910390f35b610d2660048036036020811015610d1057600080fd5b8101908080359060200190929190505050611dd2565b005b610d6a60048036036020811015610d3e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dde565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000610dde82611e64565b610e33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612d13602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610e79826117ad565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d686021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610f1f611ed6565b73ffffffffffffffffffffffffffffffffffffffff161480610f4e5750610f4d81610f48611ed6565b611d3e565b5b610fa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612c886038913960400191505060405180910390fd5b610fad8383611ede565b505050565b610fc3610fbd611ed6565b82611f97565b611018576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612d896031913960400191505060405180910390fd5b61102383838361208b565b505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61109983838360405180602001604052806000815250611cc6565b505050565b6110af6110a9611ed6565b82611f97565b611104576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612ddf6030913960400191505060405180910390fd5b61110d816122f3565b50565b6005818154811061111d57fe5b9060005260206000209060080201600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111cf5780601f106111a4576101008083540402835291602001916111cf565b820191906000526020600020905b8154815290600101906020018083116111b257829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561126d5780601f106112425761010080835404028352916020019161126d565b820191906000526020600020905b81548152906001019060200180831161125057829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561130b5780601f106112e05761010080835404028352916020019161130b565b820191906000526020600020905b8154815290600101906020018083116112ee57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113a95780601f1061137e576101008083540402835291602001916113a9565b820191906000526020600020905b81548152906001019060200180831161138c57829003601f168201915b505050505090806005015490806006015490806007018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114535780601f1061142857610100808354040283529160200191611453565b820191906000526020600020905b81548152906001019060200180831161143657829003601f168201915b5050505050905088565b611465611aaf565b6114d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fcdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df75760405160405180910390a250565b61157d611aaf565b6115ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab0360405160405180910390a250565b60056040518061010001604052808a8152602001898152602001888152602001868152602001878152602001858152602001848152602001838152509080600181540180825580915050600190039060005260206000209060080201600090919091909150600082015181600001556020820151816001019080519060200190611718929190612b3a565b506040820151816002019080519060200190611735929190612b3a565b506060820151816003019080519060200190611752929190612b3a565b50608082015181600401908051906020019061176f929190612b3a565b5060a0820151816005015560c0820151816006015560e08201518160070190805190602001906117a0929190612b3a565b5050505050505050505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561186c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612cea6029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612cc0602a913960400191505060405180910390fd5b611943600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612308565b9050919050565b611952611aaf565b6119c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611af2611ed6565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611b16611ed6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bb7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060046000611bc4611ed6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611c71611ed6565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611cd7611cd1611ed6565b83611f97565b611d2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612d896031913960400191505060405180910390fd5b611d3884848484612316565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611ddb8161109e565b50565b611de6611aaf565b611e58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611e6181612388565b50565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611f51836117ad565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611fa282611e64565b611ff7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612c5c602c913960400191505060405180910390fd5b6000612002836117ad565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061207157508373ffffffffffffffffffffffffffffffffffffffff1661205984610dd3565b73ffffffffffffffffffffffffffffffffffffffff16145b8061208257506120818185611d3e565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166120ab826117ad565b73ffffffffffffffffffffffffffffffffffffffff1614612117576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612d3f6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561219d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612c386024913960400191505060405180910390fd5b6121a88383836124ce565b6121b3600082611ede565b6121fa600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124d3565b612241600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124f6565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6123056122ff826117ad565b8261250c565b50565b600081600001549050919050565b61232184848461208b565b61232d848484846126a9565b612382576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612be06032913960400191505060405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561240e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612c126026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b505050565b6124eb600182600001546129e590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b8173ffffffffffffffffffffffffffffffffffffffff1661252c826117ad565b73ffffffffffffffffffffffffffffffffffffffff1614612598576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612dba6025913960400191505060405180910390fd5b6125a4826000836124ce565b6125af600082611ede565b6125f6600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124d3565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006126ca8473ffffffffffffffffffffffffffffffffffffffff16612a2f565b6126d757600190506129dd565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b61271b611ed6565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156127cb5780820151818401526020810190506127b0565b50505050905090810190601f1680156127f85780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310612890578051825260208201915060208101905060208303925061286d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146128f2576040519150601f19603f3d011682016040523d82523d6000602084013e6128f7565b606091505b509150915081612965576000815111156129145780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612be06032913960400191505060405180910390fd5b600081806020019051602081101561297c57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b6000612a2783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612a7a565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015612a7157506000801b8214155b92505050919050565b6000838311158290612b27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612aec578082015181840152602081019050612ad1565b50505050905090810190601f168015612b195780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612b7b57805160ff1916838001178555612ba9565b82800160010185558215612ba9579182015b82811115612ba8578251825591602001919060010190612b8d565b5b509050612bb69190612bba565b5090565b612bdc91905b80821115612bd8576000816000905550600101612bc0565b5090565b9056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220e9a2ee94d8b85b044a3ddb44de696adac89c63bbf2f9f94a0f496d1482d762da64736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806352d5aca0116100b85780638f32d59b1161007c5780638f32d59b14610b07578063a22cb46514610b29578063b88d4fde14610b79578063e985e9c514610c7e578063ec9b6db914610cfa578063f2fde38b14610d2857610137565b806352d5aca0146106b75780636352211e146109ed57806370a0823114610a5b578063715018a614610ab35780638da5cb5b14610abd57610137565b806342842e0e116100ff57806342842e0e1461032757806342966c681461039557806344b7b730146103c357806346456c661461062f578063476fd4741461067357610137565b806301ffc9a71461013c578063081812fc146101a1578063095ea7b31461020f57806323b872dd1461025d5780633af32abf146102cb575b600080fd5b6101876004803603602081101561015257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d6c565b604051808215151515815260200191505060405180910390f35b6101cd600480360360208110156101b757600080fd5b8101908080359060200190929190505050610dd3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61025b6004803603604081101561022557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e6e565b005b6102c96004803603606081101561027357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb2565b005b61030d600480360360208110156102e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611028565b604051808215151515815260200191505060405180910390f35b6103936004803603606081101561033d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061107e565b005b6103c1600480360360208110156103ab57600080fd5b810190808035906020019092919050505061109e565b005b6103ef600480360360208110156103d957600080fd5b8101908080359060200190929190505050611110565b60405180898152602001806020018060200180602001806020018881526020018781526020018060200186810386528d818151815260200191508051906020019080838360005b83811015610451578082015181840152602081019050610436565b50505050905090810190601f16801561047e5780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b838110156104b757808201518184015260208101905061049c565b50505050905090810190601f1680156104e45780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b8381101561051d578082015181840152602081019050610502565b50505050905090810190601f16801561054a5780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b83811015610583578082015181840152602081019050610568565b50505050905090810190601f1680156105b05780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b838110156105e95780820151818401526020810190506105ce565b50505050905090810190601f1680156106165780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b6106716004803603602081101561064557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061145d565b005b6106b56004803603602081101561068957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611575565b005b6109eb60048036036101008110156106ce57600080fd5b8101908080359060200190929190803590602001906401000000008111156106f557600080fd5b82018360208201111561070757600080fd5b8035906020019184600183028401116401000000008311171561072957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561078c57600080fd5b82018360208201111561079e57600080fd5b803590602001918460018302840111640100000000831117156107c057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561082357600080fd5b82018360208201111561083557600080fd5b8035906020019184600183028401116401000000008311171561085757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156108ba57600080fd5b8201836020820111156108cc57600080fd5b803590602001918460018302840111640100000000831117156108ee57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291908035906020019064010000000081111561096557600080fd5b82018360208201111561097757600080fd5b8035906020019184600183028401116401000000008311171561099957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061168d565b005b610a1960048036036020811015610a0357600080fd5b81019080803590602001909291905050506117ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a9d60048036036020811015610a7157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611875565b6040518082815260200191505060405180910390f35b610abb61194a565b005b610ac5611a85565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b0f611aaf565b604051808215151515815260200191505060405180910390f35b610b7760048036036040811015610b3f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611b0e565b005b610c7c60048036036080811015610b8f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610bf657600080fd5b820183602082011115610c0857600080fd5b80359060200191846001830284011164010000000083111715610c2a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611cc6565b005b610ce060048036036040811015610c9457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d3e565b604051808215151515815260200191505060405180910390f35b610d2660048036036020811015610d1057600080fd5b8101908080359060200190929190505050611dd2565b005b610d6a60048036036020811015610d3e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dde565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000610dde82611e64565b610e33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612d13602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610e79826117ad565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d686021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610f1f611ed6565b73ffffffffffffffffffffffffffffffffffffffff161480610f4e5750610f4d81610f48611ed6565b611d3e565b5b610fa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612c886038913960400191505060405180910390fd5b610fad8383611ede565b505050565b610fc3610fbd611ed6565b82611f97565b611018576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612d896031913960400191505060405180910390fd5b61102383838361208b565b505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61109983838360405180602001604052806000815250611cc6565b505050565b6110af6110a9611ed6565b82611f97565b611104576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612ddf6030913960400191505060405180910390fd5b61110d816122f3565b50565b6005818154811061111d57fe5b9060005260206000209060080201600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111cf5780601f106111a4576101008083540402835291602001916111cf565b820191906000526020600020905b8154815290600101906020018083116111b257829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561126d5780601f106112425761010080835404028352916020019161126d565b820191906000526020600020905b81548152906001019060200180831161125057829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561130b5780601f106112e05761010080835404028352916020019161130b565b820191906000526020600020905b8154815290600101906020018083116112ee57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113a95780601f1061137e576101008083540402835291602001916113a9565b820191906000526020600020905b81548152906001019060200180831161138c57829003601f168201915b505050505090806005015490806006015490806007018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114535780601f1061142857610100808354040283529160200191611453565b820191906000526020600020905b81548152906001019060200180831161143657829003601f168201915b5050505050905088565b611465611aaf565b6114d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fcdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df75760405160405180910390a250565b61157d611aaf565b6115ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab0360405160405180910390a250565b60056040518061010001604052808a8152602001898152602001888152602001868152602001878152602001858152602001848152602001838152509080600181540180825580915050600190039060005260206000209060080201600090919091909150600082015181600001556020820151816001019080519060200190611718929190612b3a565b506040820151816002019080519060200190611735929190612b3a565b506060820151816003019080519060200190611752929190612b3a565b50608082015181600401908051906020019061176f929190612b3a565b5060a0820151816005015560c0820151816006015560e08201518160070190805190602001906117a0929190612b3a565b5050505050505050505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561186c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612cea6029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612cc0602a913960400191505060405180910390fd5b611943600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612308565b9050919050565b611952611aaf565b6119c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611af2611ed6565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611b16611ed6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bb7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060046000611bc4611ed6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611c71611ed6565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611cd7611cd1611ed6565b83611f97565b611d2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612d896031913960400191505060405180910390fd5b611d3884848484612316565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611ddb8161109e565b50565b611de6611aaf565b611e58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611e6181612388565b50565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611f51836117ad565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611fa282611e64565b611ff7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612c5c602c913960400191505060405180910390fd5b6000612002836117ad565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061207157508373ffffffffffffffffffffffffffffffffffffffff1661205984610dd3565b73ffffffffffffffffffffffffffffffffffffffff16145b8061208257506120818185611d3e565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166120ab826117ad565b73ffffffffffffffffffffffffffffffffffffffff1614612117576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612d3f6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561219d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612c386024913960400191505060405180910390fd5b6121a88383836124ce565b6121b3600082611ede565b6121fa600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124d3565b612241600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124f6565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6123056122ff826117ad565b8261250c565b50565b600081600001549050919050565b61232184848461208b565b61232d848484846126a9565b612382576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612be06032913960400191505060405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561240e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612c126026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b505050565b6124eb600182600001546129e590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b8173ffffffffffffffffffffffffffffffffffffffff1661252c826117ad565b73ffffffffffffffffffffffffffffffffffffffff1614612598576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612dba6025913960400191505060405180910390fd5b6125a4826000836124ce565b6125af600082611ede565b6125f6600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124d3565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006126ca8473ffffffffffffffffffffffffffffffffffffffff16612a2f565b6126d757600190506129dd565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b61271b611ed6565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156127cb5780820151818401526020810190506127b0565b50505050905090810190601f1680156127f85780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310612890578051825260208201915060208101905060208303925061286d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146128f2576040519150601f19603f3d011682016040523d82523d6000602084013e6128f7565b606091505b509150915081612965576000815111156129145780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612be06032913960400191505060405180910390fd5b600081806020019051602081101561297c57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b6000612a2783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612a7a565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015612a7157506000801b8214155b92505050919050565b6000838311158290612b27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612aec578082015181840152602081019050612ad1565b50505050905090810190601f168015612b195780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612b7b57805160ff1916838001178555612ba9565b82800160010185558215612ba9579182015b82811115612ba8578251825591602001919060010190612b8d565b5b509050612bb69190612bba565b5090565b612bdc91905b80821115612bd8576000816000905550600101612bc0565b5090565b9056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220e9a2ee94d8b85b044a3ddb44de696adac89c63bbf2f9f94a0f496d1482d762da64736f6c63430006000033",
  "sourceMap": "458:621:2:-:0;;;754:190;8:9:-1;5:2;;;30:1;27;20:12;5:2;754:190:2;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;754:190:2;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;754:190:2;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;754:190:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;754:190:2;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;754:190:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:40:5;399:10;761:20;;742:18;;;:40;;:::i;:::-;2259::6;2129:10;2278:20;;2259:18;;;:40;;:::i;:::-;714:17:18;734:12;:10;;;:12;;:::i;:::-;714:32;;766:9;757:6;;:18;;;;;;;;;;;;;;;;;;824:9;791:43;;820:1;791:43;;;;;;;;;;;;679:163;839:11:2;831:5;:19;;;;;;;;;;;;:::i;:::-;;871:3;861:7;:13;;;;;;;;;;;;:::i;:::-;;887:49;727:10;906:29;;887:18;;;:49;;:::i;:::-;754:190;;458:621;;1498:201:5;1597:10;1582:25;;:11;:25;;;;;1574:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:4;1651:20;:33;1672:11;1651:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1498:201;:::o;752:106:3:-;805:15;840:10;833:17;;752:106;:::o;458:621:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "458:621:2:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;458:621:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:144:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:144:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4315:213:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4315:213:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3632:390;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3632:390:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6063:309;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6063:309:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;684:112:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;684:112:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7034:151:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7034:151:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;368:245:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;368:245:7;;;;;;;;;;;;;;;;;:::i;:::-;;273:19:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;273:19:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;273:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;273:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;273:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;273:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;273:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:150:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;526:150:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;371:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;371:147:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;301:269:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;301:269:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;301:269:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;301:269:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;301:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;301:269:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;301:269:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;301:269:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;301:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;301:269:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;301:269:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;301:269:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;301:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;301:269:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;301:269:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;301:269:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;301:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;301:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;301:269:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;301:269:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;301:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;301:269:1;;;;;;;;;;;;;;;:::i;:::-;;2964:237:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2964:237:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2518:220;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2518:220:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1734:140:18;;;:::i;:::-;;923:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1289:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4835:295:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4835:295:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7922:289;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7922:289:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7922:289:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7922:289:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7922:289:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7922:289:6;;;;;;;;;;;;;;;:::i;:::-;;5460:156;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5460:156:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;952:118:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;952:118:2;;;;;;;;;;;;;;;;;:::i;:::-;;2029:109:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2029:109:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;947:144:5;1026:4;1050:20;:33;1071:11;1050:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:40;;947:144;;;:::o;4315:213:6:-;4383:7;4411:16;4419:7;4411;:16::i;:::-;4403:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4496:15;:24;4512:7;4496:24;;;;;;;;;;;;;;;;;;;;;4489:31;;4315:213;;;:::o;3632:390::-;3713:13;3729:16;3737:7;3729;:16::i;:::-;3713:32;;3770:5;3764:11;;:2;:11;;;;3756:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3850:5;3834:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3859:37;3876:5;3883:12;:10;:12::i;:::-;3859:16;:37::i;:::-;3834:62;3826:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3993:21;4002:2;4006:7;3993:8;:21::i;:::-;3632:390;;;:::o;6063:309::-;6224:41;6243:12;:10;:12::i;:::-;6257:7;6224:18;:41::i;:::-;6216:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6332:32;6346:4;6352:2;6356:7;6332:13;:32::i;:::-;6063:309;;;:::o;684:112:21:-;745:4;769:9;:19;779:8;769:19;;;;;;;;;;;;;;;;;;;;;;;;;762:26;;684:112;;;:::o;7034:151:6:-;7138:39;7155:4;7161:2;7165:7;7138:39;;;;;;;;;;;;:16;:39::i;:::-;7034:151;;;:::o;368:245:7:-;486:41;505:12;:10;:12::i;:::-;519:7;486:18;:41::i;:::-;478:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;591:14;597:7;591:5;:14::i;:::-;368:245;:::oo;526:150:21:-;1135:9:18;:7;:9::i;:::-;1127:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;617:5:21::1;595:9;:19;605:8;595:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;659:8;638:30;;;;;;;;;;;;526:150:::0;:::o;371:147::-;1135:9:18;:7;:9::i;:::-;1127:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;464:4:21::1;442:9;:19;452:8;442:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;501:8;484:26;;;;;;;;;;;;371:147:::0;:::o;301:269:1:-;490:3;499:62;;;;;;;;506:7;499:62;;;;515:3;499:62;;;;520:6;499:62;;;;528:4;499:62;;;;534:7;499:62;;;;543:3;499:62;;;;548:6;499:62;;;;556:4;499:62;;;490:72;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;490:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;301:269;;;;;;;;:::o;2964:237:6:-;3028:7;3048:13;3064:11;:20;3076:7;3064:20;;;;;;;;;;;;;;;;;;;;;3048:36;;3120:1;3103:19;;:5;:19;;;;3095:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3188:5;3181:12;;;2964:237;;;:::o;2518:220::-;2582:7;2627:1;2610:19;;:5;:19;;;;2602:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2696:34;:17;:24;2714:5;2696:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2689:41;;2518:220;;;:::o;1734:140:18:-;1135:9;:7;:9::i;:::-;1127:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1833:1:::1;1796:40;;1817:6;;;;;;;;;;;1796:40;;;;;;;;;;;;1864:1;1847:6;;:19;;;;;;;;;;;;;;;;;;1734:140::o:0;923:79::-;961:7;988:6;;;;;;;;;;;981:13;;923:79;:::o;1289:94::-;1329:4;1369:6;;;;;;;;;;;1353:22;;:12;:10;:12::i;:::-;:22;;;1346:29;;1289:94;:::o;4835:295:6:-;4950:12;:10;:12::i;:::-;4938:24;;:8;:24;;;;4930:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5050:8;5005:18;:32;5024:12;:10;:12::i;:::-;5005:32;;;;;;;;;;;;;;;:42;5038:8;5005:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;5103:8;5074:48;;5089:12;:10;:12::i;:::-;5074:48;;;5113:8;5074:48;;;;;;;;;;;;;;;;;;;;;;4835:295;;:::o;7922:289::-;8054:41;8073:12;:10;:12::i;:::-;8087:7;8054:18;:41::i;:::-;8046:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8160:43;8178:4;8184:2;8188:7;8197:5;8160:17;:43::i;:::-;7922:289;;;;:::o;5460:156::-;5549:4;5573:18;:25;5592:5;5573:25;;;;;;;;;;;;;;;:35;5599:8;5573:35;;;;;;;;;;;;;;;;;;;;;;;;;5566:42;;5460:156;;;;:::o;952:118:2:-;1049:13;1054:7;1049:4;:13::i;:::-;952:118;:::o;2029:109:18:-;1135:9;:7;:9::i;:::-;1127:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2102:28:::1;2121:8;2102:18;:28::i;:::-;2029:109:::0;:::o;9412:155:6:-;9469:4;9486:13;9502:11;:20;9514:7;9502:20;;;;;;;;;;;;;;;;;;;;;9486:36;;9557:1;9540:19;;:5;:19;;;;9533:26;;;9412:155;;;:::o;752:106:3:-;805:15;840:10;833:17;;752:106;:::o;16126:158:6:-;16219:2;16192:15;:24;16208:7;16192:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16268:7;16264:2;16237:39;;16246:16;16254:7;16246;:16::i;:::-;16237:39;;;;;;;;;;;;16126:158;;:::o;9937:333::-;10022:4;10047:16;10055:7;10047;:16::i;:::-;10039:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10123:13;10139:16;10147:7;10139;:16::i;:::-;10123:32;;10185:5;10174:16;;:7;:16;;;:51;;;;10218:7;10194:31;;:20;10206:7;10194:11;:20::i;:::-;:31;;;10174:51;:87;;;;10229:32;10246:5;10253:7;10229:16;:32::i;:::-;10174:87;10166:96;;;9937:333;;;;:::o;13826:553::-;13948:4;13928:24;;:16;13936:7;13928;:16::i;:::-;:24;;;13920:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14031:1;14017:16;;:2;:16;;;;14009:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14087:39;14108:4;14114:2;14118:7;14087:20;:39::i;:::-;14167:29;14184:1;14188:7;14167:8;:29::i;:::-;14209:35;:17;:23;14227:4;14209:23;;;;;;;;;;;;;;;:33;:35::i;:::-;14255:33;:17;:21;14273:2;14255:21;;;;;;;;;;;;;;;:31;:33::i;:::-;14324:2;14301:11;:20;14313:7;14301:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;14363:7;14359:2;14344:27;;14353:4;14344:27;;;;;;;;;;;;13826:553;;;:::o;13340:100::-;13400:32;13406:16;13414:7;13406;:16::i;:::-;13424:7;13400:5;:32::i;:::-;13340:100;:::o;1084:114:4:-;1149:7;1176;:14;;;1169:21;;1084:114;;;:::o;8930:280:6:-;9048:32;9062:4;9068:2;9072:7;9048:13;:32::i;:::-;9099:48;9122:4;9128:2;9132:7;9141:5;9099:22;:48::i;:::-;9091:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8930:280;;;;:::o;2244:229:18:-;2338:1;2318:22;;:8;:22;;;;2310:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:8;2399:38;;2420:6;;;;;;;;;;;2399:38;;;;;;;;;;;;2457:8;2448:6;;:17;;;;;;;;;;;;;;;;;;2244:229;:::o;16832:93:6:-;;;;:::o;1395:110:4:-;1476:21;1495:1;1476:7;:14;;;:18;;:21;;;;:::i;:::-;1459:7;:14;;:38;;;;1395:110;:::o;1206:181::-;1378:1;1360:7;:14;;;:19;;;;;;;;;;;1206:181;:::o;12716:436:6:-;12819:5;12799:25;;:16;12807:7;12799;:16::i;:::-;:25;;;12791:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12879:48;12900:5;12915:1;12919:7;12879:20;:48::i;:::-;12968:29;12985:1;12989:7;12968:8;:29::i;:::-;13010:36;:17;:24;13028:5;13010:24;;;;;;;;;;;;;;;:34;:36::i;:::-;13088:1;13057:11;:20;13069:7;13057:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;13136:7;13132:1;13108:36;;13117:5;13108:36;;;;;;;;;;;;12716:436;;:::o;15031:1087::-;15161:4;15188:15;:2;:13;;;:15::i;:::-;15183:60;;15227:4;15220:11;;;;15183:60;15314:12;15328:23;15355:2;:7;;15416:2;15400:36;;;:45;;;;15460:12;:10;:12::i;:::-;15487:4;15506:7;15528:5;15363:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15363:181:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15363:181:6;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;15363:181:6;15355:190;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;15355:190:6;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;15313:232:6;;;;15561:7;15556:555;;15609:1;15589:10;:17;:21;15585:384;;;15757:10;15751:17;15818:15;15805:10;15801:2;15797:19;15790:44;15705:148;15893:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15556:555;16001:13;16028:10;16017:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16017:32:6;;;;;;;;;;;;;;;;16001:48;;719:10;16082:16;;16072:26;;;:6;:26;;;;16064:35;;;;;15031:1087;;;;;;;:::o;1315:136:20:-;1373:7;1400:43;1404:1;1407;1400:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1393:50;;1315:136;;;;:::o;708:619:0:-;768:4;1030:16;1057:19;1079:66;1057:88;;;;1248:7;1236:20;1224:32;;1288:11;1276:8;:23;;:42;;;;;1315:3;1303:15;;:8;:15;;1276:42;1268:51;;;;708:619;;;:::o;1788:192:20:-;1874:7;1907:1;1902;:6;;1910:12;1894:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1894:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:9;1950:1;1946;:5;1934:17;;1971:1;1964:8;;;1788:192;;;;;:::o;458:621:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.6.0;\r\n\r\nimport \"./ERC721Full.sol\";\r\nimport \"./ERC721Metadata.sol\";\r\nimport \"./ERC721Enumerable.sol\";\r\nimport \"./ERC721Burnable.sol\";\r\n\r\nimport \"./Context.sol\";\r\nimport \"./Ownable.sol\";\r\nimport \"./ERC721.sol\";\r\nimport \"./IERC721Metadata.sol\";\r\nimport \"./ERC165.sol\";\r\nimport \"./WhiteList.sol\";\r\nimport \"./Animal.sol\";\r\n\r\n//contract MyToken is Context, ERC165, ERC721, ERC721MetadataMintable, ERC721Burnable, IERC721Metadata, WhiteList {\r\n\r\ncontract MyToken is ERC721, ERC721Burnable, Animal, WhiteList {\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    mapping(uint256 => string) private _tokenURIs;\r\n\r\n    string private _baseURI;\r\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\r\n\r\n    \r\n\r\n    constructor (string memory AnimalToken, string memory ANI) public {\r\n        _name = AnimalToken;\r\n        _symbol = ANI;\r\n\r\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\r\n    }\r\n\r\n    function deadAnimal(uint256 tokenId) public virtual {\r\n        //tokenId.etat = 'mort';\r\n        burn(tokenId);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n",
  "sourcePath": "C:\\Users\\Dieu\\Desktop\\Blockchain Programming\\ERC721 Coin\\contracts\\AnimalToken.sol",
  "ast": {
    "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/AnimalToken.sol",
    "exportedSymbols": {
      "MyToken": [
        200
      ]
    },
    "id": 201,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 137,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 138,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 1455,
        "src": "27:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 139,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 1646,
        "src": "55:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 140,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 1413,
        "src": "87:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Burnable.sol",
        "file": "./ERC721Burnable.sol",
        "id": 141,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 1082,
        "src": "121:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Context.sol",
        "file": "./Context.sol",
        "id": 142,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 228,
        "src": "155:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 143,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 2091,
        "src": "180:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 144,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 1054,
        "src": "205:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/IERC721Metadata.sol",
        "file": "./IERC721Metadata.sol",
        "id": 145,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 1809,
        "src": "229:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC165.sol",
        "file": "./ERC165.sol",
        "id": 146,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 330,
        "src": "262:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/WhiteList.sol",
        "file": "./WhiteList.sol",
        "id": 147,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 2438,
        "src": "286:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Animal.sol",
        "file": "./Animal.sol",
        "id": 148,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 136,
        "src": "313:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 149,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1053,
              "src": "478:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1053",
                "typeString": "contract ERC721"
              }
            },
            "id": 150,
            "nodeType": "InheritanceSpecifier",
            "src": "478:6:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 151,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1081,
              "src": "486:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$1081",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 152,
            "nodeType": "InheritanceSpecifier",
            "src": "486:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 153,
              "name": "Animal",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 135,
              "src": "502:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Animal_$135",
                "typeString": "contract Animal"
              }
            },
            "id": 154,
            "nodeType": "InheritanceSpecifier",
            "src": "502:6:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 155,
              "name": "WhiteList",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2437,
              "src": "510:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhiteList_$2437",
                "typeString": "contract WhiteList"
              }
            },
            "id": 156,
            "nodeType": "InheritanceSpecifier",
            "src": "510:9:2"
          }
        ],
        "contractDependencies": [
          135,
          227,
          329,
          1053,
          1081,
          1655,
          1758,
          2090,
          2437
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 200,
        "linearizedBaseContracts": [
          200,
          2437,
          2090,
          135,
          1081,
          1053,
          1758,
          329,
          1655,
          227
        ],
        "name": "MyToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 158,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 200,
            "src": "529:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 157,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "529:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 160,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 200,
            "src": "556:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 159,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "556:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 164,
            "name": "_tokenURIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 200,
            "src": "587:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 163,
              "keyType": {
                "id": 161,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "595:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "587:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 162,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "606:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 166,
            "name": "_baseURI",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 200,
            "src": "641:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 165,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "641:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 169,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 200,
            "src": "671:66:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 167,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "671:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 168,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "727:10:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "820:124:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 176,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "831:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "AnimalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "839:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "831:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "831:19:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 180,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "861:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 181,
                      "name": "ANI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "871:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "861:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "861:13:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "906:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 184,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "887:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "887:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "887:49:2"
                }
              ]
            },
            "documentation": null,
            "id": 189,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "name": "AnimalToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 189,
                  "src": "767:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "name": "ANI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 189,
                  "src": "794:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "766:46:2"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "820:0:2"
            },
            "scope": 200,
            "src": "754:190:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "1004:66:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 195,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "1054:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 194,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1080,
                      "src": "1049:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1049:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "1049:13:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ec9b6db9",
            "id": 199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deadAnimal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 199,
                  "src": "972:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "971:17:2"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1004:0:2"
            },
            "scope": 200,
            "src": "952:118:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 201,
        "src": "458:621:2"
      }
    ],
    "src": "0:1083:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/AnimalToken.sol",
    "exportedSymbols": {
      "MyToken": [
        200
      ]
    },
    "id": 201,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 137,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 138,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 1455,
        "src": "27:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 139,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 1646,
        "src": "55:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 140,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 1413,
        "src": "87:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721Burnable.sol",
        "file": "./ERC721Burnable.sol",
        "id": 141,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 1082,
        "src": "121:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Context.sol",
        "file": "./Context.sol",
        "id": 142,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 228,
        "src": "155:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 143,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 2091,
        "src": "180:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 144,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 1054,
        "src": "205:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/IERC721Metadata.sol",
        "file": "./IERC721Metadata.sol",
        "id": 145,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 1809,
        "src": "229:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/ERC165.sol",
        "file": "./ERC165.sol",
        "id": 146,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 330,
        "src": "262:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/WhiteList.sol",
        "file": "./WhiteList.sol",
        "id": 147,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 2438,
        "src": "286:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Dieu/Desktop/Blockchain Programming/ERC721 Coin/contracts/Animal.sol",
        "file": "./Animal.sol",
        "id": 148,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 136,
        "src": "313:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 149,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1053,
              "src": "478:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1053",
                "typeString": "contract ERC721"
              }
            },
            "id": 150,
            "nodeType": "InheritanceSpecifier",
            "src": "478:6:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 151,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1081,
              "src": "486:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$1081",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 152,
            "nodeType": "InheritanceSpecifier",
            "src": "486:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 153,
              "name": "Animal",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 135,
              "src": "502:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Animal_$135",
                "typeString": "contract Animal"
              }
            },
            "id": 154,
            "nodeType": "InheritanceSpecifier",
            "src": "502:6:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 155,
              "name": "WhiteList",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2437,
              "src": "510:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhiteList_$2437",
                "typeString": "contract WhiteList"
              }
            },
            "id": 156,
            "nodeType": "InheritanceSpecifier",
            "src": "510:9:2"
          }
        ],
        "contractDependencies": [
          135,
          227,
          329,
          1053,
          1081,
          1655,
          1758,
          2090,
          2437
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 200,
        "linearizedBaseContracts": [
          200,
          2437,
          2090,
          135,
          1081,
          1053,
          1758,
          329,
          1655,
          227
        ],
        "name": "MyToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 158,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 200,
            "src": "529:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 157,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "529:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 160,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 200,
            "src": "556:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 159,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "556:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 164,
            "name": "_tokenURIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 200,
            "src": "587:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 163,
              "keyType": {
                "id": 161,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "595:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "587:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 162,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "606:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 166,
            "name": "_baseURI",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 200,
            "src": "641:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 165,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "641:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 169,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 200,
            "src": "671:66:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 167,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "671:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 168,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "727:10:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "820:124:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 176,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "831:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "AnimalToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "839:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "831:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "831:19:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 180,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "861:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 181,
                      "name": "ANI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "871:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "861:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "861:13:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "906:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 184,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "887:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "887:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "887:49:2"
                }
              ]
            },
            "documentation": null,
            "id": 189,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "name": "AnimalToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 189,
                  "src": "767:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "name": "ANI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 189,
                  "src": "794:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "766:46:2"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "820:0:2"
            },
            "scope": 200,
            "src": "754:190:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "1004:66:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 195,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "1054:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 194,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1080,
                      "src": "1049:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1049:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "1049:13:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ec9b6db9",
            "id": 199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deadAnimal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 199,
                  "src": "972:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "971:17:2"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1004:0:2"
            },
            "scope": 200,
            "src": "952:118:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 201,
        "src": "458:621:2"
      }
    ],
    "src": "0:1083:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-11T20:33:22.562Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}